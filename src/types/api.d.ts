/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/health": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * Health check
     * @description Returns a simple health status message.
     */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              /** @example healthy server */
              message?: string;
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
  "/all-cryptos": {
    parameters: {
      query?: never;
      header?: never;
      path?: never;
      cookie?: never;
    };
    /**
     * All cryptos
     * @description Returns an array of all cryptos stored in DB
     */
    get: {
      parameters: {
        query?: never;
        header?: never;
        path?: never;
        cookie?: never;
      };
      requestBody?: never;
      responses: {
        /** @description success */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            "application/json": {
              data?: {
                id?: string;
                sourceurl?: string;
                heading?: string;
                name?: string;
                symbol?: string;
                synopsis?: string;
                position?: string;
                buy?: string;
                buyprice?: number;
                takeprofit?: number;
                stoploss?: number;
                sell?: string;
                sellprice?: number;
                shortcoverprofit?: number;
                shortcoverloss?: number;
                waitout?: string;
                monitor?: string;
                tag?: string;
                scrappedat?: number;
                createdat?: number;
              }[];
            };
          };
        };
      };
    };
    put?: never;
    post?: never;
    delete?: never;
    options?: never;
    head?: never;
    patch?: never;
    trace?: never;
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: never;
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
